name: Publish Release Image

on:
  release:
    types: [published]

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Extract release info
        id: release_info
        run: |
          echo "RELEASE_TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          echo "IS_PRERELEASE=${{ github.event.release.prerelease }}" >> $GITHUB_ENV

      - name: Build and tag MySQL image
        run: |
          IMAGE=${{ secrets.DOCKER_USERNAME }}/${{ vars.DOCKER_IMAGE_NAME }}
          docker build -t $IMAGE:${{ env.RELEASE_TAG }} . --build-arg DB_TYPE=mysql

          if [ "${{ env.IS_PRERELEASE }}" = "true" ]; then
            docker tag $IMAGE:${{ env.RELEASE_TAG }} $IMAGE:beta
          else
            docker tag $IMAGE:${{ env.RELEASE_TAG }} $IMAGE:latest
          fi

      - name: Build and tag Postgres image
        run: |
          IMAGE=${{ secrets.DOCKER_USERNAME }}/${{ vars.DOCKER_IMAGE_NAME }}-postgres
          docker build -t $IMAGE:${{ env.RELEASE_TAG }} . --build-arg DB_TYPE=postgres

          if [ "${{ env.IS_PRERELEASE }}" = "true" ]; then
            docker tag $IMAGE:${{ env.RELEASE_TAG }} $IMAGE:beta
          else
            docker tag $IMAGE:${{ env.RELEASE_TAG }} $IMAGE:latest
          fi

      - name: Push Docker images
        run: |
          BASE_IMAGE=${{ secrets.DOCKER_USERNAME }}/${{ vars.DOCKER_IMAGE_NAME }}
          POSTGRES_IMAGE=${{ secrets.DOCKER_USERNAME }}/${{ vars.DOCKER_IMAGE_NAME }}-postgres

          docker push $BASE_IMAGE:${{ env.RELEASE_TAG }}
          docker push $POSTGRES_IMAGE:${{ env.RELEASE_TAG }}

          if [ "${{ env.IS_PRERELEASE }}" = "true" ]; then
            docker push $BASE_IMAGE:beta
            docker push $POSTGRES_IMAGE:beta
          else
            docker push $BASE_IMAGE:latest
            docker push $POSTGRES_IMAGE:latest
          fi
